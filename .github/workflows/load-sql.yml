name: Load Data into PostgreSQL

on:
  workflow_dispatch: # Permite ejecuciÃ³n manual

jobs:
  load-data:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  # âœ… Clona el repo primero

    - name: Configurar SSH
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.EC2_SSH_KEY }}
        known_hosts: "fake"

    - name: Copiar SQL a EC2
      run: |
        # ðŸ”„ Usa la ruta correcta segÃºn tu estructura
        scp -o StrictHostKeyChecking=no -r ./sql_scripts \
          ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/

    - name: Ejecutar SQL en PostgreSQL
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
        for sql_file in /home/$USER/sql_scripts/*.sql; do
          filename=$(basename "$sql_file")
          echo "Copiando $filename al contenedor..."
          docker cp "$sql_file" postgresql-dev:/tmp/"$filename"
          echo "Ejecutando $filename..."
          docker exec postgresql-dev psql \
            -U $POSTGRES_USER \
            -d $POSTGRES_DB \
            -f /tmp/"$filename"
        done
        echo "Â¡Datos cargados exitosamente!"
        EOF
      env:
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
